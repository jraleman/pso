{"version":3,"sources":["assets/logo.svg","components/AppHeader.tsx","utils/imageToAscii.ts","components/AsciiPicture.tsx","containers/AsciiGallery.tsx","assets/rappies/al-rappy.jpg","assets/rappies/del-rappy.jpg","assets/rappies/love-rappy1.jpg","assets/rappies/rappy.jpg","data/warp.ts","utils/generateWarp.ts","components/WarpCalculator.tsx","components/LootCalculator.tsx","containers/SandboxCalculators.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Logo","styled","img","Header","header","Link","a","AppHeader","src","logo","alt","href","target","rel","getAsciiImage","require","imageToAscii","asciiImage","config","maxWidth","maxHeight","console","log","uniqueId","PrintAsciiLines","lines","map","line","AsciiLine","ImageFrame","div","code","Image","AsciiPicture","useState","asciiOutput","setAsciiOutput","showAscii","setShowAscii","useEffect","generateAsciiImage","onMouseDown","useCallback","onMouseUp","split","onTouchStart","onTouchEnd","rappies","GalleryContainer","Title","h3","AsciiGallery","images","warpData","generateWarp","episode","area","solo","WarpCalculator","output","setOutput","o","warpEpisode1","LootCalculator","props","generatedCmd","setGeneratedCmd","weaponId","grind","special","percentages","armorId","slots","def","evp","itemId","amount","unitId","suffix","value","level","mesetas","warpCalculatorProps","lootCalculatorProps","native","aBeast","machine","dark","hit","SandboxCalculator","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6934493.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport styled from 'styled-components'\nimport logo from '../assets/logo.svg';\n\nconst AppHeader = () => {\n    const content = 'Edit src/App.tsx and save to reload.';\n    const footer = 'Learn React';\n    return (\n        <Header>\n            <Logo src={logo} alt=\"logo\" />\n            <p>{content}</p>\n            <Link href=\"https://github.com/jraleman\" target=\"_blank\" rel=\"noopener noreferrer\">\n                {footer}\n            </Link>\n        </Header>\n    );\n};\n\nconst Logo = styled.img`\n    height: 40vmin;\n    pointer-events: none;\n    @media (prefers-reduced-motion: no-preference) {\n        animation: App-logo-spin infinite 20s linear;\n    }\n`;\n\nconst Header = styled.header`\n    background-color: #282c34;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: calc(10px + 2vmin);\n    color: white;\n`;\n\nconst Link = styled.a`\n    color: #61dafb;\n`;\n\nexport default AppHeader;\n","const getAsciiImage = require(\"get-ascii-image\");\n\nconst imageToAscii = async ({ src }: IImageToAscii): Promise<AsciiImage> => {\n    let asciiImage: AsciiImage = null;\n\n    const config = {\n        // 101 chars wide\n        maxWidth: 64,\n        maxHeight: 64,\n        // avoidedCharacters: [\"#\", \"a\", '$'],\n    };\n    try {\n      asciiImage = await getAsciiImage(src, config);\n    } catch (err) {\n      console.log(err);\n    }\n    return asciiImage;\n};\n\nexport interface IImageToAscii {\n    src: string;\n}\n\nexport type AsciiImage = string | null;\n\nexport default imageToAscii;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport imageToAscii from '../utils/imageToAscii';\n\nconst uniqueId = require(\"lodash.uniqueid\");\n\nconst PrintAsciiLines = ({ lines = [''] }) => (\n    <>\n        {lines?.map((line: string) => \n            line && (<AsciiLine key={uniqueId()}>{line}</AsciiLine>)\n        )}\n    </>\n);\n\nconst AsciiPicture = ({ src, alt = '' }: IAsciiPicture): JSX.Element => {\n    const [asciiOutput, setAsciiOutput] = useState<string | null>('');\n    const [showAscii, setShowAscii] = useState<boolean>(false);\n\n    useEffect(() => {\n        const generateAsciiImage = async () => {\n            const asciiImage = await imageToAscii({ src });\n            setAsciiOutput(asciiImage);\n        };\n        generateAsciiImage();\n    }, [src]);\n\n    const onMouseDown = useCallback(() => {\n        setShowAscii(true);\n    }, []);\n\n    const onMouseUp =  useCallback(() => {\n        setShowAscii(false);\n    }, []);\n\n    const lines = asciiOutput?.split('\\n');\n    return (\n        <ImageFrame\n            onMouseDown={onMouseDown}\n            onMouseUp={onMouseUp}\n            onTouchStart={onMouseDown}\n            onTouchEnd={onMouseUp}\n        >\n            {!showAscii && <Image src={src} alt={alt} />}\n            {showAscii && <PrintAsciiLines lines={lines} />}\n        </ImageFrame>\n    );\n};\n\nconst ImageFrame = styled.div`\n    font-size: 6px;\n    margin: 0 auto;\n    border: #282c34;\n    border-width: medium;\n    border-style: solid;\n    border-radius: 2em;\n    height: 425px;\n    width: 425px;\n    margin-top: 2em;\n    margin-bottom: 2em;\n    margin-left: 2em;\n    margin-right: 2em;\n    cursor: pointer;\n`;\n\nconst AsciiLine = styled.code`\n    display: block;\n    white-space: pre;\n`;\n\nconst Image = styled.img`\n    width: auto;\n    height: 100%;\n`;\n\nexport interface IAsciiPicture {\n    src: string;\n    alt?: string;\n}\n\nexport default AsciiPicture;\n","import React from 'react';\nimport styled from 'styled-components';\nimport AsciiPicture from '../components/AsciiPicture';\nimport alRappy from '../assets/rappies/al-rappy.jpg';\nimport delRappy from '../assets/rappies/del-rappy.jpg';\nimport loveRappy from '../assets/rappies/love-rappy1.jpg';\nimport rappy from '../assets/rappies/rappy.jpg';\n\nconst rappies: Array<string> = [\n    alRappy,\n    delRappy,\n    loveRappy,\n    rappy,\n];\n\n// create thumbnail with images, change to ascii (text) on hover\n// take a look at meme/ repository to implement gallery\nconst AsciiGallery = (): JSX.Element => {\n    const title = 'Rappies! üê£';\n    const images = rappies;\n    return (\n        <GalleryContainer>\n            <hr />\n            <Title>{title}</Title>\n            {images?.map((src) => <AsciiPicture src={src} />)}\n            <hr />\n        </GalleryContainer>\n    );\n};\n\nconst GalleryContainer = styled.div`\n    display: inline-grid;\n`;\n\nconst Title = styled.h3`\n    text-align: center;\n`;\n\nexport default AsciiGallery;\n","export default __webpack_public_path__ + \"static/media/al-rappy.ddcd8332.jpg\";","export default __webpack_public_path__ + \"static/media/del-rappy.9c9d0c41.jpg\";","export default __webpack_public_path__ + \"static/media/love-rappy1.c37b43f4.jpg\";","export default __webpack_public_path__ + \"static/media/rappy.66f75aeb.jpg\";","import { WarpData } from '../types/warp';\n\n// all values after 18, (10 for EP4), segfault happens :(\nexport const warpData: WarpData[] = [\n    {\n        0: 'Pioneer 2',\n        1: 'Forest 1',\n        2: 'Forest 2',\n        3: 'Caves 1',\n        4: 'Caves 2',\n        5: 'Caves 3',\n        6: 'Mines 1',\n        7: 'Mines 2',\n        8: 'Ruins 1',\n        9: 'Ruins 2',\n        10: 'Ruins 3',\n        11: 'Dragon',\n        12: 'De Rol Le',\n        13: 'Vol Opt',\n        14: 'Falz',\n        15: 'ID Lobby',\n        16: 'Battle Spaceship',\n        17: 'Battle Palace (aka Temple)',\n    },\n    // episode 3 is another game\n    {\n        0: 'Lab'\n    },\n    {\n        0: 'Lab',\n        1: 'VR Temple Œ±',\n        2: 'VR Temple Œ≤',\n        3: 'VR Spaceship Œ±',\n        4: 'VR Spaceship Œ≤',\n        5: 'Central Control Area',\n        6: 'Jungle North',\n        7: 'Jungle East',\n        8: 'Mountain',\n        9: 'Seaside Day',\n        10: 'Seabed Upper',\n        11: 'Seabed Lower',\n        12: 'Gal Gryphon',\n        13: 'Olga Flow',\n        14: 'Barba Ray',\n        15: 'Gol Dragon',\n        16: 'Seaside Night',\n        17: 'Tower',\n    },\n    // {},\n    {\n        0: 'Pioneer 2',\n        1: 'Crater (Eastern Route)',\n        2: 'Crater (Western Route)',\n        3: 'Crater (Southern Route)',\n        4: 'Crater (Northern Route)',\n        5: 'Crater Interior',\n        6: 'Desert 1',\n        7: 'Desert 2',\n        8: 'Desert 3',\n        9: 'Saint Million / Shambertin',\n        10: 'Test Map (Caves 2)',\n    },\n];","import { WarpData } from '../types/warp';\nimport { IGenerateWarp, IWarpEpisode } from '../interfaces/warp';\nimport { warpData } from '../data/warp';\n\nconst generateWarp = ({ episode, area, solo = true }: IGenerateWarp): string => {\n    const codes: WarpData = warpData[episode];\n    const warpValue: string | undefined = codes[area];\n    const command: string = solo ? '/warpme' : `/warpall`;\n\n    return warpValue ? `${command} ${area}` : 'Wrong episode/area code';\n};\n\nexport const warpEpisode1 = ({ area, solo }: IWarpEpisode): string =>\n    generateWarp({ episode: 0, area, solo });\n\nexport const warpEpisode2 = ({ area, solo }: IWarpEpisode): string => \n    generateWarp({ episode: 1, area, solo });\n\nexport const warpEpisode4 = ({ area, solo }: IWarpEpisode): string => \n    generateWarp({ episode: 3, area, solo });\n\nexport default generateWarp;\n","import React, { useState, useEffect } from 'react';\nimport { warpEpisode1 } from '../utils/generateWarp';\nimport { IGenerateWarp } from '../interfaces/warp';\n\nconst WarpCalculator = ({ episode, area, solo }: IGenerateWarp): JSX.Element | null => {\n    const [output, setOutput] = useState<string | null>(null);\n\n    useEffect(() => {\n        let o: string = '';\n        if (episode === 1) {\n            o = warpEpisode1({ area, solo });\n        }\n        setOutput(o);\n    }, [episode, area, solo, setOutput]);\n\n    if (!output) {\n        return null;\n    }\n    return (\n        <code>{output}</code>\n    );\n};\n\nexport default WarpCalculator;\n","import React, { useState, useEffect } from 'react';\nimport { ILootCalculator } from '../interfaces/loot';\n\nconst LootCalculator = (props: ILootCalculator): JSX.Element | null => {\n    const [generatedCmd, setGeneratedCmd] = useState<string | null>(null);\n    const {\n        weaponId,\n        grind,\n        special,\n        percentages,\n        armorId,\n        slots,\n        def,\n        evp,\n        itemId,\n        amount,\n        unitId,\n        suffix,\n        value,\n        level,\n        mesetas,\n    } = props;\n\n    useEffect(() => {\n        // implements switch/case to handle which item to generate\n\n        // WEAPONS:\n        // weaponId,\n        // grind,\n        // special,\n        // percentages,\n\n        // ARMOUR:\n        // armorId,\n        // slots,\n        // def,\n        // evp,\n\n        // ITEM:\n        // itemId,\n        // amount,\n\n        // UNITS:\n        // unitId,\n        // suffix,\n\n        // TECHNIQUES:\n        // value,\n        // level,\n\n        // CURRENCY:\n        // mesetas,\n        // TODO: PD generator (use itemGenerator)\n        // TODO: PB generator (use PDgenerator)\n\n        setGeneratedCmd('');\n    }, []);\n\n    return (\n        <>\n            <div>LootCalculator</div>\n            <div>{generatedCmd}</div>\n        </>\n    );\n};\n\nexport default LootCalculator;\n","import React from 'react';\nimport WarpCalculator from '../components/WarpCalculator';\nimport LootCalculator from '../components/LootCalculator';\n\n// get from a From type reducer\nconst warpCalculatorProps = {\n    episode: 1, \n    area: 2,\n    solo: false,\n};\n\nconst lootCalculatorProps = {\n    weaponId: '',\n    grind: '',\n    special: '',\n    percentages: {\n        native: '',\n        aBeast: '',\n        machine: '',\n        dark: '',\n        hit: '',\n    },\n    armorId: '',\n    slots: '',\n    def: '',\n    evp: '',\n    itemId: '',\n    amount: '',\n    unitId: '',\n    suffix: '',\n    value: '',\n    level: '',\n    mesetas: 0,\n};\n\nconst SandboxCalculator = (): JSX.Element => {\n    const { episode, area, solo } = warpCalculatorProps;\n\n    return (\n        <>\n            <hr />\n            <div>SandboxCalculator</div>\n            <WarpCalculator episode={episode} area={area} solo={solo} />\n            <LootCalculator {...lootCalculatorProps} />\n            <hr />\n        </>\n    );\n};\n\nexport default SandboxCalculator;\n","import React from 'react';\nimport styled from 'styled-components'\nimport AppHeader from './components/AppHeader';\nimport AsciiGallery from './containers/AsciiGallery';\nimport SandboxCalculator from './containers/SandboxCalculators';\n\nconst App = () => {\n  return (\n    <Container>\n      <AppHeader />\n      <SandboxCalculator />\n      <AsciiGallery />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  text-align: center;\n`;\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}